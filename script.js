import { GoogleGenerativeAI } from "https://esm.run/@google/generative-ai";

// Initialize Gemini API with your API key
const API_KEY = "AIzaSyC2TemjgvX8mesTUqNz1ElZ--ksmi_CbF0"; // Replace with your actual Gemini API key
const genAI = new GoogleGenerativeAI(API_KEY);
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

// Array to store treatments
let treatments = [];

// Fetch treatment from Gemini API
async function fetchTreatmentFromGemini() {
    const breed = document.getElementById("breed-select").value;
    const infoDiv = document.getElementById("breed-info");
    const problemTextarea = document.getElementById("problem");

    if (!breed) {
        infoDiv.innerHTML = "Please select a cow breed.";
        problemTextarea.value = "";
        return;
    }

    // Static cow breed info
    const breedData = {
        holstein: "Holstein: High milk yield, prone to stress-related issues.",
        jersey: "Jersey: Smaller size, good for small farms, sensitive to diet changes.",
        gir: "Gir: Native Indian breed, hardy and disease-resistant."
    };
    infoDiv.innerHTML = breedData[breed];

    // Show loading state
    problemTextarea.value = "Fetching treatment from Gemini API...";

    try {
        const prompt = `Suggest medical treatment for a ${breed} cow showing signs of fatigue and reduced milk production. Focus on cow-specific health issues and remedies. Provide a concise response.`;
        const result = await model.generateContent(prompt);
        const response = await result.response;
        const treatmentText = response.text();

        if (treatmentText && treatmentText.trim()) {
            problemTextarea.value = `(Generated by Gemini API)\n${treatmentText}`;
        } else {
            problemTextarea.value = "(Generated by Gemini API)\nNo specific treatment suggestions returned.";
        }
    } catch (error) {
        console.error("Error with Gemini API:", error);
        problemTextarea.value = `(Generated by Gemini API)\nError: Could not fetch treatment. Check API key or network. Details: ${error.message}`;
    }
}

// Add treatment and display in Treatments box
function addTreatment() {
    const cowId = document.getElementById("cow-id").value;
    const problem = document.getElementById("problem").value;
    
    if (cowId && problem) {
        treatments.push({ cowId, problem });
        updateTreatmentBox();
        document.getElementById("problem-form").reset();
    } else {
        alert("Please enter both Cow ID and problem details!");
    }
}

// Update the Treatments box
function updateTreatmentBox() {
    const treatmentBox = document.getElementById("treatment-box");
    treatmentBox.innerHTML = "";

    if (treatments.length === 0) {
        treatmentBox.innerHTML = "No treatments added yet.";
        return;
    }

    treatments.forEach((entry, index) => {
        const div = document.createElement("div");
        div.className = "treatment-entry";
        div.innerHTML = `<strong>Cow ID: ${entry.cowId}</strong><br>${entry.problem}`;
        treatmentBox.appendChild(div);
    });
}

// Connect to dairy farm
function connectDairy() {
    const dairyId = document.getElementById("dairy-id").value;
    const status = document.getElementById("connection-status");
    
    if (dairyId) {
        status.innerHTML = `Connected to Dairy Farm ID: ${dairyId}`;
        status.style.color = "green";
    } else {
        status.innerHTML = "Please enter a valid Dairy Farm ID!";
        status.style.color = "red";
    }
}

// Expose functions to global scope
window.fetchTreatmentFromGemini = fetchTreatmentFromGemini;
window.addTreatment = addTreatment;
window.connectDairy = connectDairy;